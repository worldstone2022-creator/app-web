<?php

return array(
    'product' => array(
        'type' => 'Type',
        'goods' => 'Goods',
        'images' => 'Images',
        'service' => 'Service',
        'addImages' => 'Add Images',
        'toBeBilled' => 'To Be Billed',
        'productInfo' => 'Product Info',
        'productType' => 'Product Type',
        'stockOnHand' => 'Stock On Hand',
        'transactions' => 'Transactions',
        'openingStock' => 'Opening Stock',
        'toBeInvoiced' => 'To Be Invoiced',
        'commitedStock' => 'Commited Stock',
        'newTransaction' => 'New Transaction',
        'availableForSale' => 'Available For Sale',
        'modeOfAdjustment' => 'Mode Of adjustment',
        'referenceNumber' => 'Reference number',
        'quantityAdjustment' => 'Quantity adjustment',
        'valueAdjustment' => 'Value adjustment',
        'reason' => 'Reason',
        'availableQuantity' => 'Available quantity',
        'quantityOnHand' => 'Quantity on hand',
        'quabtityAdjusted' => 'Quantity adjusted',
        'costPrice' => 'Cost price',
        'currentValue' => 'Current value',
        'changedValue' => 'Changed value',
        'adjustedValue' => 'Adjusted value',
        'Created' => 'New Product Created',
        'productCreated' => 'Product created by',
        'productUpdated' => 'Product updated by',
        'Updated' => 'Product Updated',
        'newQuantityOnHand' => 'New Quantity on hand',
    ),
    'inventory' => array(
        'adjustmentReason' => 'Stock Adjustment Reason',
        'reasonName' => 'Reason name',
        'addReason' => 'Add Reason',
        'adjustedby' => 'Adjusted by',
        'inventoryInfo' => 'Inventory info',
        'files' => 'Files',
        'addFiles' => 'Add Files',
        'Created' => 'Inventory Created',
        'inventoryCreated' => 'Inventory is created of product',
        'fileCreated' => 'Inventory File Uploaded',
        'inventoryFileCreated' => 'A Inventory File is being uploaded by',
        'active' => 'Active',
        'inactive' => 'Inactive',
        'inventoryStatus' => 'Inventory status',
        'inventoryAssetValue' => 'Inventory Asset Value',
        'inventoryNumber' => 'INVENTORY NUMBER',
        'inventoryDate' => 'INVENTORY DATE',
        'companyDetail' => 'Company Detail',
        'inventoryDateInSmall' => 'Inventory Date',
        'withQuantityOnHand' => 'with Quantity on hand',
        'fromValue' => 'from Value',
        'toNewValue' => 'to new Value',
        'details' => 'Inventory is being created by',
    ),
    'vendor' => array(
        'primaryContactName' => 'Primary Contact Name',
        'companyName' => 'Company Name',
        'otherDetails' => 'Other Details',
        'openingsBalance' => 'Opening Balance',
        'accountDetails' => 'Account Details',
        'billDetails' => 'Bill Details',
        'vendorCreditNumber' => 'Vendor Credit Number',
        'vendorCrediTDate' => 'Vendor Credit Date',
        'prefix' => 'Credit No',
        'vendorName' => 'Vendor Name',
        'creditDate' => 'Credit Date',
        'prefix' => 'Credit No',
        'amount' => 'Amount',
        'paymentToVendor' => 'Payment to Vendor',
        'outstandingPayable' => 'Outstanding Payables',
        'unusedCredit' => 'Unused Credits',
        'overView' => 'Overview',
        'notes' => 'Notes',
        'contacts' => 'Contacts',
        'history' => 'History',
        'vendorCreated' => 'Vendor is created by',
        'vendorUpdated' => 'Vendor is updated by',
        'noteTitle' => 'Note Title',
        'noteType' => 'Note Type',
        'vendorNoteCreated' => 'Note is created by',
        'vendorNoteUpdated' => 'Vendor note is updated by',
        'vendorContactCreated' => 'Contact created by',
        'vendorContactUpdated' => 'Vendor Contact updated by',
        'vendorAdded' => 'Vendor Added',
        'contactUpdated' => 'Vendor Contact Updated',
        'contactCreated' => 'Vendor Contact Created',
        'noteCreated' => 'Vendor Note Created',
        'noteUpdated' => 'Vendor Note Updated',
        'Created' => 'Vendor Created',
        'Updated' => 'Vendor Updated',
        'vendorCreditNumber' => 'Vendor Credit Number',
        'vendorCrediTDate' => 'Vendor Credit Date',
        'prefix' => 'Credit No',
        'vendorName' => 'Vendor Name',
        'creditDate' => 'Credit Date',
        'amount' => 'Amount',
        'vendors' => 'Vendors',
        'billedAmount' => 'Billed Amount',
        'closingBalance' => 'Closing Balance',
        'purchaseOrders' => 'Purchase Orders',
        'payments' => 'Payments',
    ),
    'vendorPayment' => array(
        'addPayment' => 'Add Payment',
        'billAmount' => 'Bill Amount',
        'amountDue' => 'Amount Due',
        'amountUsed' => 'Amount used for Payments',
        'amountRefunded' => 'Amount Refunded',
        'amountInExcess' => 'Amount in Excess',
        'vendorPaymentDetails' => 'Vendor Payment Details',
        'overView' => 'Overview',
        'notes' => 'Notes',
        'contacts' => 'Contacts',
        'payInFull' => 'Pay in Full',
        'paymentMade' => 'Payment Made',
        'paymentDate' => 'Payment Date',
        'noBills' => 'There are No Bills for the selected vendor',
        'excessPaymentMsg' => 'You are about to record an excess payment of ',
        'excessMsg' => '. This will be stored as credit for the vendor. Do you want to continue?',
        'continueToSave' => 'Continue to Save',
        'internalNote' => 'Internal Note',
        'internalUse' => 'Internal use, not visible to vendor',
        'shouldBeGreater' => 'Amount in Excess can not be negative',
        'purchaseOrderNumber' => 'Purchase Order NUmber',
        'billDate' => 'Bill Date',
        'paymentToVendor' => 'Payment to Vendor',
        'outstandingPayable' => 'Outstanding Payables',
        'unusedCredit' => 'Unused Credits',
        'history' => 'History',
        'vendorCreated' => 'Vendor is created by',
        'vendorUpdated' => 'Vendor is updated by',
        'noteTitle' => 'Note Title',
        'noteType' => 'Note Type',
        'vendorNoteCreated' => 'Note is created by',
        'vendorNoteUpdated' => 'Vendor note is updated by',
        'vendorContactCreated' => 'Contact created by',
        'vendorContactUpdated' => 'Vendor Contact updated by',
        'vendorAdded' => 'Vendor Added',
        'contactUpdated' => 'Vendor Contact Updated',
        'contactCreated' => 'Vendor Contact Created',
        'noteCreated' => 'Vendor Note Created',
        'noteUpdated' => 'Vendor Note Updated',
        'Created' => 'Vendor Created',
        'Updated' => 'Venodr Updated',
        'vendors' => 'Vendors',
        'Created' => 'Vendor Payment Created',
        'Updated' => 'Vendor Payment Updated',
        'vendorPaymentCreated' => 'A Payment is Created of amount',
        'vendorPaymentUpdated' => 'A Payment is Updated of amount',
        'ofPurchaseOrder' => 'of Purchase order number',
        'by' => 'by',
        'sendNotification' => 'Send Email Notification to Vendor',
        'clearAppliedAmount' => 'Clear Applied Amount',
    ),
    'purchaseSettings' => array(
        'purchaseOrderPrefix' => 'Purchase Order Prefix',
        'purchaseOrderNumberSeprator' => 'Purchase Order Number Seprator',
        'purchaseOrderDigits' => 'Purchase Order Number Digits',
        'purchaseOrderExample' => 'Purchase Order Number Example',
        'billOrderPrefix' => 'Bill Order Prefix',
        'billOrderNumberSeprator' => 'Bill Order Number Seprator',
        'venodrCreditPrefix' => 'Vendor Credit Prefix',
        'venodrCreditNumberSeprator' => 'Vendor Credit Number Seprator',
        'vendorCreditDigits' => 'Vendor Credit Number Digits',
        'vendorCreditExample' => 'Vendor Credit Number Example',
        'billOrderDigits' => 'Bill Order Digits',
        'billOrderExample' => 'Bill Order Example',
    ),
    'vendorCredit' => array(
        'vendorCreditCreated' => 'Vendor Credit is created by',
        'vendorCreditUpdated' => 'Vendor Credit is updated by',
        'Created' => 'Vendor Credit Created',
        'Updated' => 'Vendor Credit Updated',
        'ofAmount' => 'of amount',
    ),
    'purchaseBill' => array(
        'saveAsOpen' => 'Save as Open',
        'billCreated' => 'Bill is created of amount',
        'billUpdated' => 'Bill date is updated to',
        'Created' => 'Bill Created',
        'Updated' => 'Bill Updated',
        'by' => 'by',
        'ofPurchaseOrder' => 'of Purchase Order',
        'partially_paid' => 'Partially Paid',
        'onDate' => 'on date',
    ),
    'purchaseOrder' => array(
        'expectedDate' => 'Expected Date',
        'billedStatus' => 'Billed Status',
        'billed' => 'Billed',
        'unbilled' => 'Unbilled',
        'open' => 'Open',
        'draft' => 'Draft',
        'purchaseOrderCreated' => 'Purchase Order is created by',
        'purchaseOrderUpdated' => 'Purchase Order is updated by',
        'Created' => 'Purchase Order Created',
        'Updated' => 'Purchase Order Updated',
        'convertToBill' => 'Convert To Bill',
        'count' => 'Count',
        'deliveryStatus' => 'Delivery Status',
        'notStarted' => 'Not Started',
        'inTransaction' => 'In Transaction',
        'deliveryFailed' => 'Delivery Failed',
        'delivered' => 'Delivered',
        'expectedDeliveryDate' => 'Expected Delivery Date',
        'orderDate' => 'Order Date',
    ),
    'reports' => array(
        'inventorySummary' => 'Inventory Summary',
        'itemName' => 'Item Name',
        'sku' => 'Sku',
        'quantityOrdered' => 'Quantity Ordered',
        'quantityIn' => 'Quantity In',
        'quantityOut' => 'Quantity Out',
        'stockOnHand' => 'Stock On Hand',
        'commitedStock' => 'Committed Stock',
        'availableForSale' => 'Available For Sale',
    )
);
